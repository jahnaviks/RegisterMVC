@model RegisterMVC.Models.Registration

@{
    Layout = null;
}

<style type="text/css">
    .auto-style1 {
        width: 137px;
    }

    ul.topnav2 {
        list-style-type: none;
        margin: 0;
        padding: 0;
        overflow: hidden;
        background-color: #333;
    }

        ul.topnav2 li {
            float: left;
        }

            ul.topnav2 li a {
                display: inline-block;
                color: #f2f2f2;
                text-align: center;
                padding: 14px 16px;
                text-decoration: none;
                font-size: 17px;
            }

                ul.topnav2 li a:hover {
                    background-color: #ddd;
                    color: black;
                }

                ul.topnav2 li a.active {
                    background-color: #4CAF50;
                    color: white;
                }

    .headings {
        color: #334d4d;
        text-align: center;
        background-color: #d1e0e0;
    }

    /*.submit {
            border: 1px thick #563d7c;
            border-radius: 15px;
            color: #334d4d;
            padding: 5px 10px 5px 20px;
        }*/
</style>

<div class="headings"><h1>ABC Company</h1></div>
<div>
    <ul class="topnav2" style="color:#669999">
        <li>@Html.ActionLink("Update", "Update", "Home")</li>
        <li>@Html.ActionLink("Delete", "Delete", "Home")</li>
        <li>@Html.ActionLink("Logout", "Register", "Home")</li>
    </ul>
</div>
<div style="color: #334d4d; text-align: center; background-color: #d1e0e0; width: 1350px">
    <h2>Update User Details</h2>
</div>
@{
    var data = ViewBag.Message;
} 
@if(data ==null)
{ 
    <h3>Invalid Credentials</h3>
}
else
{
    using (Html.BeginForm("UpdateClick", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div style="background-color:#d1e0e0;width:1350px">
        @Html.ValidationSummary(true)
        <table>
            <tr>
                <td>
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @*@Html.EditorFor(model => model.FirstName)*@
                    @*@Html.ValidationMessageFor(model => model.FirstName)*@

                    <input id="email" name="email" type="text" value="@data.Email" readonly/>
                </td>

            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @*@Html.EditorFor(model => model.FirstName)*@
                    @*@Html.ValidationMessageFor(model => model.FirstName)*@

                    <input id="fname" name="fname" type="text" value="@data.FirstName" pattern="[a-zA-Z0-9 ]{6,10}" title="can have Alphabets and space of 6 to 10 characters." required oninvalid="this.setCustomValidity('Please Enter First name')" />
                </td>

            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @*@Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)*@
                    <input id="lname" name="lname" type="text" value="@data.LastName" pattern="[a-zA-Z0-9 ]{6,10}" title="can have Alphabets and space of 6 to 10 characters." required oninvalid="this.setCustomValidity('Please Enter last name')" />
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @*@Html.EditorFor(model => model.PhoneNumber)
                @Html.ValidationMessageFor(model => model.PhoneNumber)*@
                    <input id="mobile" name="mobile" type="number" value="@data.PhoneNumber" min="1000000000" max="9999999999" title="Please Enter Valid Mobile number" required oninvalid="this.setCustomValidity('Please Enter mobile number')" />
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @*@Html.EditorFor(model => model.Address)
                @Html.ValidationMessageFor(model => model.Address)*@
                    <input id="address" name="address" type="text" value="@data.Address" pattern="[a-zA-Z0-1 ]{1,30}" title="can have Alphabets, numbers and space of upto 30 characters." required oninvalid="this.setCustomValidity('Please Enter address')" />
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                </td>
                <td>
                    @*@Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)*@
                    <input id="password" name="password" type="text"  value="@data.Password" required oninvalid="this.setCustomValidity('Please Enter password')" pattern="^(?=.*[A-Za-z])(?=.*\d)(?=.*[$\u0040$!%*#?&])[A-Za-z\d$\u0040$!%*#?&]{8,}$" title="Minimum 8 characters atleast 1 Alphabet, 1 Number and 1 Special Character" />
                    @*@Html.ValidationMessage("email")*@
                </td>
            </tr>
 
            <tr>
                <td>
                    <input type="submit" value="Update" />
                </td>
            </tr>
        </table>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@RenderSection("scripts", required: false)
}

    
}
